//
// Forms
// --------------------------------------------------


// Normalize non-controls
//
// Restyle and baseline non-control form elements.

fieldset {
  padding: 0;
  margin: 0 ;
  border: 0;
}

legend {
  display: block;
  width: 100%;
  padding: 0 0 20px;
  margin-bottom: 0;
  font-size: ($font-size-base * 1.5);
  line-height: inherit;
  color: $legend-color;
  border: 0;
}
legend h2{
  border-top: 1px solid $legend-border-color;
  display: block;
  padding-top: 30px;
  margin-bottom:20px;
}

label {
  display: inline-block;
  margin-bottom: 5px;
  font-weight: 400;
  font-size: 19px;
  font-size: 1.9rem;
}


// Normalize form controls

// Override content-box in Normalize (* isn't specific enough)
input[type="search"] {
  @include box-sizing(border-box);
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 4px 0 0;
  margin-top: 1px \9; /* IE8-9 */
  line-height: normal;
}

.ie7 {
  .checkbox-inline input[type="checkbox"],
  .radio-inline input[type="radio"]{
    margin-top: 5px;
    margin-right: 5px;
  }

  legend h2{
    margin-left: -8px;
  }

}
.ie8 {
  .checkbox-inline input[type="checkbox"],
  .radio-inline input[type="radio"]{
    margin-top: 8px !important;
    margin-right: 5px !important;
  }
}
// Set the height of select and file controls to match text inputs
input[type="file"] {
  display: block;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
  height: auto;
}

// Fix optgroup Firefox bug per https://github.com/twbs/bootstrap/issues/7611
select optgroup {
  font-size: inherit;
  font-style: inherit;
  font-family: inherit;
}

// Focus for select, file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
  @include tab-focus;
}

// Fix for Chrome number input
// Setting certain font-sizes causes the `I` bar to appear on hover of the bottom increment button.
// See https://github.com/twbs/bootstrap/issues/8350 for more.
input[type="number"] {
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    height: auto;
  }
}

// Adjust output element
output {
  display: block;
  padding-top: ($padding-base-vertical + 1);
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $input-color;
  vertical-align: middle;
}

// Placeholder
//
// Placeholder text gets special styles because when browsers invalidate entire
// lines if it doesn't understand a selector/
.form-control {
  @include placeholder;
}
.ie7{
  .form-control{
    width: 99%;
  }
}
.ie9 .placeholder,
.ie8 .placeholder,
.ie7 .placeholder{
  color: #aaaaaa;
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

select.form-control{
  font-size: 16px;
}
.ie9 input.form-control,
.ie8 input.form-control,
.ie7 .form-control{
  height: auto;
  padding-top: 0;
}
.ie9 .form-inline .form-group,
.ie9 .form-inline select,
.ie8 .form-inline .form-group,
.ie8 .form-inline select,
.ie7 .form-inline .form-group,
.ie7 .form-inline select{
  width: auto;
  display:inline;
}
.ie7 .form-inline select{
  margin-right: 10px;
}
.form-inline .form-group input{
margin-right: 4px;
}
.ie7{
  .form-inline .form-group input{
  margin-right: 0;
  }
}

.form-control {
  display: block;
  width: 100%;
  height: $input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  padding: $padding-base-vertical $padding-base-horizontal;
padding: 0 6px 0 6px;
   //padding: 8px 6px 6px 6px;
  font-size: ($font-size-base*1.35714286);
  font-weight: 100;
  //line-height: $line-height-base;
  color: $input-color;
  vertical-align: middle;
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border: 1px solid $input-border;
  //-webkit-appearance: none;
  border-radius: 0;
  //border-radius: $input-border-radius;
  @include box-shadow(inset 0 1px 1px rgba(0,0,0,.075));
  @include transition(#{"border-color ease-in-out .15s, box-shadow ease-in-out .15s"});

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus;

  // Disabled and read-only inputs
  // Note: HTML5 says that controls under a fieldset > legend:first-child won't
  // be disabled if the fieldset is disabled. Due to implementation difficulty,
  // we don't honor that edge case; we style them as disabled anyway.
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: not-allowed;
    background-color: $input-bg-disabled;
  }
 
}
.ie8{
  .form-control{
   padding: 4px 6px 6px 6px !important;
  }
}
.ie7{
  .form-control{
      padding: 4px 6px 6px 6px;
  }
}


// Reset height for `textarea`s
textarea.form-control {
  height: auto;
}


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {
  margin-bottom: 40px;
    .form-group {
      margin-bottom: 15px;
      display: inline-block;
      }

      ul{
        display: inline-block;
        margin-top: 20px;
        margin-bottom: 20px;
        font-size: 19px;
        font-size: 1.9rem;
        //list-style-type:circle;
      }
      .form-group.radio-group{
        display: block;
      }

}

.ie7 .form-group{
  padding-bottom: 10px;
  margin-bottom: 30px;
}

.ie7 .ie-form-group{
  padding-bottom: -10px !important;
}

.form-group.radio-group label{
        display: block ;
      }

.form-group.radio-group label.radio-inline{
  display: inline-block !important;
  margin-right: 3em;
}

@media (max-width: $screen-xs-min){
.form-group.radio-group label.radio-inline{
  display: block !important;
  margin-right: 0;
}
}



.form-group.last{
    margin-bottom: 10px;
}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.

.radio,
.checkbox {
  display: block;
  min-height: $line-height-computed; // clear the floating input if there is no label text
  margin-top: 10px;
  margin-bottom: 10px;
  padding-left: 20px;
  vertical-align: middle;
  label {
    display: inline;
    margin-bottom: 0;
    font-weight: 100;
    cursor: pointer;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  float: left;
  margin-left: -20px;
}
.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  cursor: pointer;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  //margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"],
.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
  &[disabled],
  fieldset[disabled] & {
    cursor: not-allowed;
  }
}

// Form control sizing
@include input-size(".input-sm", $input-height-small, $padding-small-vertical, $padding-small-horizontal, $font-size-small, $line-height-small, $border-radius-none);
@include input-size(".input-lg", $input-height-large, $padding-large-vertical, $padding-large-horizontal, $font-size-large, $line-height-large, $border-radius-none);


// Form control feedback states
//
// Apply contextual and semantic states to individual form controls.

// Warning
.has-warning {
  @include form-control-validation($state-warning-text, $state-warning-text, $state-warning-bg);
}
// Error
.has-error {
  @include form-control-validation($state-danger-text, $state-danger-text, $state-danger-bg);
}
// Success
.has-success {
  @include form-control-validation($state-success-text, $state-success-text, $state-success-bg);
}


// Static form control text
//
// Apply class to a `p` element to make any string of text align with labels in
// a horizontal form layout.

.form-control-static {
  margin-bottom: 0; // Remove default margin from `p`
  padding-top: ($padding-base-vertical + 1);
}


// Help text
//
// Apply to any element you wish to create light text for placement immediately
// below a form control. Use for general help, formatting, or instructional text.

.help-block {
  display: block; // account for any element using help-block
  margin-top: 10px;
  margin-bottom: 10px;
  color: lighten($text-color, 25%); // lighten the text some for contrast
}



// Inline forms
//
// Make forms appear inline(-block) by adding the `.form-inline` class. Inline
// forms begin stacked on extra small (mobile) devices and then go inline when
// viewports reach <768px.
//
// Requires wrapping inputs and labels with `.form-group` for proper display of
// default HTML form controls and our custom form controls (e.g., input groups).
//
// Heads up! This is mixin-ed into `.navbar-form` in navbars.less.

.form-inline {

  // Kick in the inline
  @media (min-width: $screen-sm) {
    // Inline-block all the things for "inline"
    .form-group  {
      //display: inline-block;
      vertical-align: middle;
    }

    // In navbar-form, allow folks to *not* use `.form-group`
    .form-control {
      display: inline-block;

    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match (which also avoids
    // a bug in WebKit: https://github.com/twbs/bootstrap/issues/1969).
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      padding-left: 0;
    }
    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      float: none;
      margin-left: 0;
    }
  }
     .form-group  {
      margin-bottom: 0;
      display: inline-block;
  }
}


// Horizontal forms
//
// Horizontal forms are built on grid classes and allow you to create forms with
// labels on the left and inputs on the right.

.form-horizontal {

  // Consistent vertical alignment of labels, radios, and checkboxes
  .control-label,
  .radio,
  .checkbox,
  .radio-inline,
  .checkbox-inline {
    margin-top: 0;
    margin-bottom: 0;
    padding-top: ($padding-base-vertical + 1); // Default padding plus a border
  }

  // Make form groups behave like rows
  .form-group {
    @include make-row;
  }

  // Only right align form labels here when the columns stop stacking
  @media (min-width: $screen-sm) {
    .control-label {
      text-align: right;
    }
  }
}

 @media (min-width: $screen-sm) {
  .small{
    width: 160px;
  }
  .medium{
    width: 360px;
  }
}

.ie7 {
    .small{
    width: 150px;
  }
    .medium{
    width: 360px;
  }
}

.required-star{
  display: inline-block;
  color: red;
}
.form-group ul.declaration-bullets {
  margin-top: -10px !important;
  margin-left: -20px;
}
.ie7 {
  .form-group ul.declaration-bullets {
  margin-left: -6px;
  }
  .form-group ul.declaration-bullets li{
    //list-style: circle;
    margin-left: 30px;
  }
}
.declaration-bg{
  background-color: #eaeaf3;
  padding: 2px 20px 20px; 
  legend h2{
    padding-top: 0;
  }
}

fieldset#declaration legend h2,
fieldset#data_pretection legend h2{
  border: none !important;
  padding-top: 0px;
}
fieldset#declaration,
fieldset#data_pretection{
  margin-top: 20px;
}
.margin0{
  margin-bottom: 0;
  display:inline-block;
}
.margin-20{
  margin-bottom:-20px;
}
.form-divider{
  border-top: 1px solid #e5e5e5;
  margin: 30px 0 20px 0;
}